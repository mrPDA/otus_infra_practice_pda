Вот последовательность команд, которые нужно выполнить:

create_spark
Для работы с кластером вам понадобятся следующие команды:

Для инициализации Terraform (выполняется один раз):
Для создания кластера:
При выполнении terraform apply вам нужно будет ввести значения для переменных (если они не определены в terraform.tfvars) и подтвердить применение изменений, введя "yes".

Для удаления кластера, когда он больше не нужен:
destroy
При выполнении команды удаления также

hadoop distcp \
  -D fs.s3a.access.key=${YC_ACCESS_KEY_ID} \
  -D fs.s3a.secret.key=${YC_SECRET_ACCESS_KEY} \
  -D fs.s3a.endpoint=storage.yandexcloud.net \
  s3a://otus-copy-b1gjj3po03aa3m4j8ps5/* \
  hdfs:///user/ubuntu/data/

hdfs dfs -ls /user/ubuntu/data/

hadoop distcp \
  -D fs.s3a.access.key=${YC_ACCESS_KEY_ID} \
  -D fs.s3a.secret.key=${YC_SECRET_ACCESS_KEY} \
  -D fs.s3a.endpoint=storage.yandexcloud.net \
  -D dfs.replication=1 \
  -D dfs.blocksize=128m \
  -D mapreduce.job.maps=10 \
  -update -log /tmp/distcp_log \
  s3a://otus-copy-b1gjj3po03aa3m4j8ps5/* \
  hdfs:///user/ubuntu/data/

  ssh -o StrictHostKeyChecking=no ubuntu@rc1a-dataproc-m-81ni4dkc72nihebv.mdb.yandexcloud.net "hadoop distcp -D fs.s3a.access.key=${YC_ACCESS_KEY_ID} -D fs.s3a.secret.key=${YC_SECRET_ACCESS_KEY} -D fs.s3a.endpoint=storage.yandexcloud.net -D dfs.replication=1 -D dfs.blocksize=128m -D mapreduce.job.maps=10 -D mapreduce.map.memory.mb=2048 -D mapreduce.map.java.opts=-Xmx1536m -D dfs.client.use.datanode.hostname=true -update -log /tmp/distcp_log s3a://otus-copy-b1gjj3po03aa3m4j8ps5/* hdfs:///user/ubuntu/data/"

  ssh -o StrictHostKeyChecking=no ubuntu@rc1a-dataproc-m-19mol165r8ua3nqt.mdb.yandexcloud.net "hadoop distcp -D fs.s3a.access.key=${YC_ACCESS_KEY_ID} -D fs.s3a.secret.key=${YC_SECRET_ACCESS_KEY} -D fs.s3a.endpoint=storage.yandexcloud.net -update -bandwidth 100 s3a://otus-copy-b1gjj3po03aa3m4j8ps5/* hdfs:///user/ubuntu/data/"

{
    "mcpServers": {
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "/Users/denispukinov/Desktop",
          "/Users/denispukinov/Downloads"
        ]
      },
    
      "puppeteer": {
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-puppeteer"]
      },
      "apifyScraper": {
        "url": "https://api.apify.com/v2/acts/YOUR_ACT_ID/run-sync?token=${APIFY_TOKEN}"
      },
      "n8nWorkflow": {
        "url": "https://YOUR_SUBDOMAIN.n8n.cloud/webhook/YOUR_TRIGGER_ID"
      },
      "dashboardBuilder": {
        "url": "https://script.google.com/macros/s/YOUR_DEPLOYMENT_ID/exec"
      },
      "cronScheduler": {
        "url": "https://api.easycron.com/v1/cron/add?token=${EASYCRON_TOKEN}&cron_expression=0%20*%20*%20*%20*&url=https%3A%2F%2FYOUR_SUBDOMAIN.n8n.cloud%2Fwebhook%2FYOUR_TRIGGER_ID"
      }
    }
  }


  {"installed":{"client_id":"16628043231-7ujldmvjoq4phqsqug2lfatcbgub4cp7.apps.googleusercontent.com